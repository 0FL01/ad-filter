name: Update domain list

on:
  schedule:
    - cron: '0 0 * * *'  # Запуск каждый день в полночь UTC
  workflow_dispatch:     # Возможность запустить вручную

jobs:
  update-domains:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Download and process domain list for hagezi-pro
      run: |
        mkdir -p data
        echo "Downloading list for hagezi-pro..."
        curl -s https://raw.githubusercontent.com/hagezi/dns-blocklists/main/wildcard/pro-onlydomains.txt -o temp.txt
        echo "Filtering comments..."
        grep -v '^#' temp.txt > temp_filtered.txt
        echo "Adding domain prefix..."
        sed 's/^/domain:/' temp_filtered.txt > data/hagezi-pro
        echo "Cleaning up..."
        rm temp.txt temp_filtered.txt
        echo "hagezi-pro contents (first 5 lines):"
        head -n 5 data/hagezi-pro || echo "File not created!"

    - name: Download and process domain list for adlist.json
      run: |
        echo "Downloading list for adlist.json..."
        curl -s https://raw.githubusercontent.com/hagezi/dns-blocklists/main/wildcard/pro-onlydomains.txt -o temp_domains.txt
        echo "Filtering comments..."
        grep -v '^#' temp_domains.txt > filtered_domains.txt
        echo "Checking filtered domains (first 5 lines and count):"
        head -n 5 filtered_domains.txt || echo "No domains filtered!"
        echo "Total lines in filtered_domains.txt:"
        wc -l filtered_domains.txt
        echo "Creating adlist.json with domains..."
        jq -R -s -c 'split("\n") | map(select(length > 0))' filtered_domains.txt > domains_array.json
        jq -n --slurpfile domains domains_array.json \
          '{"version": 2, "rules": [{"domain_suffix": $domains[0]}]}' > adlist.json
        echo "Cleaning up..."
        rm temp_domains.txt filtered_domains.txt domains_array.json
        echo "adlist.json contents (first 1000 chars):"
        head -c 1000 adlist.json || echo "adlist.json not created!"

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 'stable'

    - name: Download Go dependencies
      run: go mod download

    - name: Run Go application
      run: |
        go run ./
        echo "Checking for adlist.dat in root:"
        ls -la adlist.dat || echo "adlist.dat not found in root"

    - name: Install sing-box and compile rule-set
      run: |
        echo "Installing sing-box..."
        bash <(curl -fsSL https://sing-box.app/deb-install.sh)
        echo "Compiling adlist.json to adlist.srs..."
        sing-box rule-set compile adlist.json
        echo "Checking adlist.srs size:"
        ls -lh adlist.srs || echo "adlist.srs not created!"

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "daily-update-${{ github.run_id }}"
        name: "Daily Update ${{ github.run_id }}"
        files: |
          adlist.dat
          adlist.srs
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
