name: Обновить списки

on:
  schedule:
    - cron: '0 1 * * *'  # Запуск каждый день в полночь UTC
  workflow_dispatch:     # Возможность запустить вручную

jobs:
  update-domains:
    runs-on: ubuntu-latest
    
    steps:
    - name: Чекаем репо
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Скачиваем и обрабатываем список доменов для adlist.dat
      run: |
        mkdir -p data
        echo "Скачиваем актуальный список Hagezi Pro..."
        curl -s https://raw.githubusercontent.com/hagezi/dns-blocklists/main/wildcard/pro-onlydomains.txt -o temp.txt
        echo "Чистим комментарии..."
        grep -v '^#' temp.txt > temp_filtered.txt
        echo "Добавляем префикс "domain:"..."
        sed 's/^/domain:/' temp_filtered.txt > data/hagezi-pro
        echo "Очистка..."
        rm temp.txt temp_filtered.txt
        echo "hagezi-pro contents (first 5 lines):"
        head -n 5 data/hagezi-pro || echo "Файл не создан!"

    - name: Скачиваем и обрататываем список доменов для adlist.json
      run: |
        echo "Скачиваем список для adlist.json..."
        curl -s https://raw.githubusercontent.com/hagezi/dns-blocklists/main/wildcard/pro-onlydomains.txt -o temp_domains.txt
        echo "Чистим комментарии..."
        grep -v '^#' temp_domains.txt > filtered_domains.txt
        echo "Проверяем отфильтрованные домены:"
        head -n 5 filtered_domains.txt || echo "Нет отфильтрованных доменов!"
        echo "Кол-во строк в filtered_domains.txt:"
        wc -l filtered_domains.txt
        echo "Создаем adlist.json..."
        cat << EOF > adlist.json
        {
            "version": 2,
            "rules": [
                {
                    "domain_suffix": []
                }
            ]
        }
        EOF
        echo "Добавляем домены в adlist.json..."
        jq --slurpfile domains <(jq -R -s -c 'split("\n") | map(select(length > 0))' filtered_domains.txt) \
          '.rules[0].domain_suffix = $domains[0]' adlist.json > temp_adlist.json && mv temp_adlist.json adlist.json
        echo "Очистка..."
        rm temp_domains.txt filtered_domains.txt
        echo "adlist.json содержит (первые 1000 символов):"
        head -c 1000 adlist.json || echo "adlist.json не создан!"

    - name: Устанавливаем GO
      uses: actions/setup-go@v5
      with:
        go-version: 'stable'

    - name: Загружаем зависимости GO
      run: go mod download

    - name: Компилируем adlist.dat
      run: |
        go run ./
        echo "Ищем adlist.dat в root:"
        ls -la adlist.dat || echo "adlist.dat не найден в root"

    - name: Устанавливаем Sing-Box
      run: |
        echo "Установка Sing-Box..."
        bash <(curl -fsSL https://sing-box.app/deb-install.sh)
        
    - name: Компилируем adlist.srs
      run: |
        echo "Компилируем adlist.json в adlist.srs..."
        sing-box rule-set compile adlist.json
        echo "Проверяем размер adlist.srs :"
        ls -lh adlist.srs || echo "adlist.srs не создан!"

    - name: Set release date
      id: set-date
      run: echo "RELEASE_DATE=$(date +%d-%m-%Y)" >> $GITHUB_ENV
        
    - name: Создаем релиз
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "daily-update-${{ env.RELEASE_DATE }}"
        name: "Ежедневное обновление ${{ env.RELEASE_DATE }}"
        files: |
          adlist.dat
          adlist.srs
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
